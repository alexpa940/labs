`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11.03.2020 20:37:13
// Design Name: 
// Module Name: govno
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module decriptor(
 input [3:0] dec,
 output reg [6:0] hex,
 output [7:0] AN
    );
assign AN[0]=0;

always @(*) begin
case  (dec)
    5'd0 : hex = 7'b1000000;
    5'd1 : hex = 7'b1111001;
    5'd2 : hex = 7'b0100100;
    5'd3 : hex = 7'b0110000;
    5'd4 : hex = 7'b0011001;
endcase
end
endmodule

module z1(
input [3:0] sw,
wire [3:0] inv_sw,
wire [3:0] dc1
);
assign inv_sw=~sw[3:0];
assign dc1=inv_sw[0]+inv_sw[1]+inv_sw[2]+inv_sw[3];
endmodule

module z2(
input [7:4] sw,
wire [3:0] dc2
);
assign dc2 =sw[7:4] | 4'b0101 ;
endmodule

module z3(
input [3:0] sw,
wire [3:0] f
);
assign f= sw[0]||(sw[1]^(sw[2]&sw[3]));
endmodule

module switcher(
input [9:8] sw,
wire [3:0] dc1,
wire [3:0] dc2,
wire [3:0] f
);
reg [3:0] mux;
always @(*) begin
case(sw[9:8])
2'b00 : mux = dc1;
2'b01 : mux = dc2;
2'b10 : mux = f;
2'b11 : mux = sw[3:0];
endcase
end
endmodule

